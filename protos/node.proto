syntax = "proto3";

option java_multiple_files = true;
option java_package = "me.hashemalayan.nosql.shared";
option java_outer_classname = "NodeProto";

import "google/protobuf/timestamp.proto";

package node;

service NodeService {
  rpc GetNodeState(GetNodeStateRequest) returns (GetNodeStateResponse);
  rpc CreateCollection(CreateCollectionRequest) returns (CollectionMetaData);
  rpc GetCollections(GetCollectionsRequest) returns (GetCollectionsResponse);
  rpc GetCollectionDocuments(GetCollectionDocumentsRequest) returns (stream CollectionDocument);
  rpc EditCollection(EditCollectionRequest) returns (EditCollectionResponse);
  rpc DeleteCollection(DeleteCollectionRequest) returns (DeleteCollectionResponse);
  rpc GetDocumentSample(GetDocumentSampleRequest) returns (GetDocumentSampleResponse);
  rpc SetCollectionDocument(SetCollectionDocumentRequest) returns (SetCollectionDocumentResponse);
  rpc DeleteCollectionDocument(DeleteCollectionDocumentRequest) returns (DeleteCollectionDocumentResponse);
  rpc ClientHello(stream ClientHelloRequest) returns (stream ClientHelloResponse);
  rpc IndexCollectionProperty(IndexCollectionPropertyRequest) returns (IndexCollectionPropertyResponse);
  rpc EqualsQuery(EqualsQueryRequest) returns (stream EqualsQueryResponse);
  rpc IsPropertyIndexed(IsPropertyIndexedRequest) returns (IsPropertyIndexedResponse);
  rpc RemoveIndexFromCollectionProperty(RemoveIndexFromCollectionPropertyRequest) returns (RemoveIndexFromCollectionPropertyResponse);
  rpc GetCollectionMetaData(GetCollectionMetaDataRequest) returns (CollectionMetaData);
}

message GetCollectionMetaDataRequest{
  string collection_id = 1;
}

message RemoveIndexFromCollectionPropertyRequest{
  string collection_id = 1;
  string property = 2;
}

message RemoveIndexFromCollectionPropertyResponse{

}

message IsPropertyIndexedRequest {
  string collection_id = 1;
  string property = 2;
}

message IsPropertyIndexedResponse {
  bool isIndexed = 1;
}

message EqualsQueryRequest {
  string collection_id = 1;
  string property = 2;
  string value = 3;
}

message EqualsQueryResponse{
  string document_id = 1;
}

message IndexCollectionPropertyRequest {
  string collection_id = 1;
  string property = 2;
}

message IndexCollectionPropertyResponse {

}

message ClientHelloRequest {

}

message ClientHelloResponse {

}

message DeleteCollectionDocumentRequest {
  string collection_id = 1;
  string document_id = 2;
}

message DeleteCollectionDocumentResponse{
}

message SetCollectionDocumentRequest {
  string collection_id = 1;
  string document_id = 2;
  string document = 3;
}

message SetCollectionDocumentResponse {
  CollectionDocument document = 1;
}

message GetDocumentSampleRequest{
  string collection_id = 1;
}

message GetDocumentSampleResponse {
  string document_sample = 1;
}

message DeleteCollectionRequest {
  string collection_id = 1;
}

message DeleteCollectionResponse {

}

message EditCollectionRequest {
  string collection_id = 1;
  string collection_name = 2;
}

message EditCollectionResponse {

}

message GetCollectionDocumentsRequest {
  string collection_id = 1;
}

message DocumentMetaData {
  string id = 1;
  int32 affinity = 2;
  google.protobuf.Timestamp created_on = 3;
  google.protobuf.Timestamp last_edited_on = 4;
  bool deleted = 5;
}

message CollectionDocument {
  DocumentMetaData meta_data = 1;
  string data = 2;
}

message CreateCollectionRequest {
  string name = 1;
  string schema = 2;
}

message CollectionMetaData {
  string id = 1;
  string name = 2;
  google.protobuf.Timestamp created_on = 3;
  bool deleted = 4;
  repeated string indexed_properties = 5;
}

message GetNodeStateRequest {
  int32 sender = 1;
}

message GetNodeStateResponse{
  int32 port = 1;
  NodeState node_state = 2;
}

message GetCollectionsRequest {

}

message GetCollectionsResponse {
  repeated CollectionMetaData collections_meta_data = 1;
}

enum NodeState{
  HEAlTHY = 0;
  WAITING = 1;
  ERROR = 2;
}